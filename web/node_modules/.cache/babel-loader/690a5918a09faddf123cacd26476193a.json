{"ast":null,"code":"import _regeneratorRuntime from\"/home/caetano/Desktop/tsreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/caetano/Desktop/tsreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/caetano/Desktop/tsreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/caetano/Desktop/tsreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{FiChevronRight}from'react-icons/fi';import repositoriesApi from'../../services/api/repositories_api';import logoImg from\"../../assets/logo.svg\";import{Cotainer,Title,Form,Input,SubmitButton,ErrorMessage,RepositoriesList,RepositoriesListItem,RepositoriesListItemRepoInfo}from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputError=_useState4[0],setInputError=_useState4[1];var _useState5=useState(handleRepositoriesInitialValue),_useState6=_slicedToArray(_useState5,2),repositories=_useState6[0],setRepositories=_useState6[1];useEffect(function(){document.title='Repositories | Github Explorer';},[]);useEffect(function(){localStorage.setItem('@GithubExplorer:repositories',JSON.stringify(repositories));},[repositories]);function addRepository(_x){return _addRepository.apply(this,arguments);}function _addRepository(){_addRepository=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var _yield$repositoriesAp,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(validateInputText()){_context.next=3;break;}return _context.abrupt(\"return\");case 3:_context.prev=3;_context.next=6;return repositoriesApi.get(\"/repos/\".concat(inputText));case 6:_yield$repositoriesAp=_context.sent;data=_yield$repositoriesAp.data;setRepositories([].concat(_toConsumableArray(repositories),[data]));setInputText('');setInputError('');_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](3);setInputError('Repositório não encontrado :/');case 16:case\"end\":return _context.stop();}}},_callee,null,[[3,13]]);}));return _addRepository.apply(this,arguments);}function handleRepositoriesInitialValue(){var storagedRepositories=localStorage.getItem('@GithubExplorer:repositories');return storagedRepositories?JSON.parse(storagedRepositories):[];}function validateInputText(){if(!inputText){setInputError('Por favor, informe um repositório válido. ex: autor/repositório');return false;}return true;}return/*#__PURE__*/_jsxs(Cotainer,{children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"Github Explorer\"}),/*#__PURE__*/_jsx(Title,{children:\"Explore reposit\\xF3rios do Github\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:addRepository,children:[/*#__PURE__*/_jsx(Input,{value:inputText,onChange:function onChange(_ref){var target=_ref.target;return setInputText(target.value);},hasError:!!inputError,placeholder:\"Digite o nome do reposit\\xF3rio\"}),/*#__PURE__*/_jsx(SubmitButton,{children:\"Pesquisar\"})]}),inputError&&/*#__PURE__*/_jsx(ErrorMessage,{children:inputError}),/*#__PURE__*/_jsx(RepositoriesList,{children:repositories.map(function(repository){return/*#__PURE__*/_jsxs(RepositoriesListItem,{to:\"/repositories/\".concat(repository.full_name),children:[/*#__PURE__*/_jsx(\"img\",{src:repository.owner.avatar_url,alt:\"\"}),/*#__PURE__*/_jsxs(RepositoriesListItemRepoInfo,{children:[/*#__PURE__*/_jsx(\"strong\",{children:repository.full_name}),/*#__PURE__*/_jsx(\"p\",{children:repository.description})]}),/*#__PURE__*/_jsx(FiChevronRight,{})]},repository.full_name);})})]});};export default Dashboard;","map":{"version":3,"sources":["/home/caetano/Desktop/tsreact/src/pages/Dashboard/index.tsx"],"names":["React","useEffect","useState","FiChevronRight","repositoriesApi","Cotainer","Title","Form","Input","SubmitButton","ErrorMessage","RepositoriesList","RepositoriesListItem","RepositoriesListItemRepoInfo","Dashboard","inputText","setInputText","inputError","setInputError","handleRepositoriesInitialValue","repositories","setRepositories","document","title","localStorage","setItem","JSON","stringify","addRepository","event","preventDefault","validateInputText","get","data","storagedRepositories","getItem","parse","logoImg","target","value","map","repository","full_name","owner","avatar_url","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport { IRepository } from './interfaces';\n\nimport repositoriesApi from '../../services/api/repositories_api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport {\n  Cotainer,\n  Title,\n  Form,\n  Input,\n  SubmitButton,\n  ErrorMessage,\n  RepositoriesList,\n  RepositoriesListItem,\n  RepositoriesListItemRepoInfo,\n} from './styles';\n\nconst Dashboard: React.FC = () => {\n  const [inputText, setInputText] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<IRepository[]>(handleRepositoriesInitialValue);\n\n  useEffect(() => {\n    document.title = 'Repositories | Github Explorer';\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function addRepository(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (!validateInputText()) return;\n\n    try {\n      const { data } = await repositoriesApi.get<IRepository>(`/repos/${inputText}`);\n      setRepositories([...repositories, data]);\n      setInputText('');\n      setInputError('');\n    } catch {\n      setInputError('Repositório não encontrado :/');\n    }\n  }\n\n  function handleRepositoriesInitialValue() {\n    const storagedRepositories = localStorage.getItem('@GithubExplorer:repositories');\n    return storagedRepositories ? JSON.parse(storagedRepositories) : [];\n  }\n\n  function validateInputText() {\n    if (!inputText) {\n      setInputError('Por favor, informe um repositório válido. ex: autor/repositório');\n      return false;\n    }\n\n    return true;\n  }\n\n  return (\n    <Cotainer>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositórios do Github</Title>\n\n      <Form onSubmit={addRepository}>\n        <Input\n          value={inputText}\n          onChange={({ target }) => setInputText(target.value)}\n          hasError={!!inputError}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <SubmitButton>Pesquisar</SubmitButton>\n      </Form>\n\n      {inputError && <ErrorMessage>{inputError}</ErrorMessage>}\n\n      <RepositoriesList>\n        {repositories.map((repository) => (\n          <RepositoriesListItem\n            to={`/repositories/${repository.full_name}`}\n            key={repository.full_name}\n          >\n            <img src={repository.owner.avatar_url} alt=\"\" />\n            <RepositoriesListItemRepoInfo>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </RepositoriesListItemRepoInfo>\n            <FiChevronRight />\n          </RepositoriesListItem>\n        ))}\n      </RepositoriesList>\n    </Cotainer>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}