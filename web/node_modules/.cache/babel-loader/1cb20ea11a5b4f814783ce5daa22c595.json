{"ast":null,"code":"import _regeneratorRuntime from\"/home/caetano/Desktop/tsreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/caetano/Desktop/tsreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/caetano/Desktop/tsreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{FiChevronLeft,FiChevronRight}from'react-icons/fi';import{useRouteMatch,useHistory,Link}from'react-router-dom';import repositoriesApi from'../../services/api/repositories_api';import logoImg from\"../../assets/logo.svg\";import{Header,ContentContainer,RepositoryInfo,RepositoryInfoHeader,RepositoryInfoList,IssuesList,IssuesListItem,IssuesListItemInfo}from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Repository=function Repository(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),repository=_useState2[0],setRepository=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),issues=_useState4[0],setIssues=_useState4[1];var _useRouteMatch=useRouteMatch(),routeParams=_useRouteMatch.params;var browserHistory=useHistory();useEffect(function(){document.title='Repo Info | Github Explorer';function loadPageData(){return _loadPageData.apply(this,arguments);}function _loadPageData(){_loadPageData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,apiRepository,apiIssues;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([repositoriesApi.get(\"repos/\".concat(routeParams.repository)),repositoriesApi.get(\"repos/\".concat(routeParams.repository,\"/issues\"))]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);apiRepository=_yield$Promise$all2[0].data;apiIssues=_yield$Promise$all2[1].data;setRepository(apiRepository);setIssues(apiIssues);case 8:case\"end\":return _context.stop();}}},_callee);}));return _loadPageData.apply(this,arguments);}loadPageData();},[routeParams.repository]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"Github Explorer\"})}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return browserHistory.goBack();},children:[/*#__PURE__*/_jsx(FiChevronLeft,{}),\"Voltar\"]})]}),/*#__PURE__*/_jsxs(ContentContainer,{children:[repository&&/*#__PURE__*/_jsxs(RepositoryInfo,{children:[/*#__PURE__*/_jsxs(RepositoryInfoHeader,{children:[/*#__PURE__*/_jsx(\"img\",{src:repository.owner.avatar_url,alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:repository.full_name}),/*#__PURE__*/_jsx(\"p\",{children:repository.description})]})]}),/*#__PURE__*/_jsxs(RepositoryInfoList,{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:repository.stargazers_count}),/*#__PURE__*/_jsx(\"span\",{children:\"Stars\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:repository.forks_count}),/*#__PURE__*/_jsx(\"span\",{children:\"Forks\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:repository.open_issues_count}),/*#__PURE__*/_jsx(\"span\",{children:\"Issues abertas\"})]})]})]}),/*#__PURE__*/_jsx(IssuesList,{children:issues.map(function(issue){return/*#__PURE__*/_jsxs(IssuesListItem,{href:issue.html_url,target:\"_blank\",children:[/*#__PURE__*/_jsxs(IssuesListItemInfo,{children:[/*#__PURE__*/_jsx(\"strong\",{children:issue.title}),/*#__PURE__*/_jsx(\"p\",{children:issue.user.login})]}),/*#__PURE__*/_jsx(FiChevronRight,{})]},issue.id);})})]})]});};export default Repository;","map":{"version":3,"sources":["/home/caetano/Desktop/tsreact/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","FiChevronLeft","FiChevronRight","useRouteMatch","useHistory","Link","repositoriesApi","Header","ContentContainer","RepositoryInfo","RepositoryInfoHeader","RepositoryInfoList","IssuesList","IssuesListItem","IssuesListItemInfo","Repository","repository","setRepository","issues","setIssues","routeParams","params","browserHistory","document","title","loadPageData","Promise","all","get","apiRepository","data","apiIssues","logoImg","goBack","owner","avatar_url","full_name","description","stargazers_count","forks_count","open_issues_count","map","issue","html_url","user","login","id"],"mappings":"ybAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,aAAT,CAAwBC,cAAxB,KAA8C,gBAA9C,CACA,OAASC,aAAT,CAAwBC,UAAxB,CAAoCC,IAApC,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,eAAP,KAA4B,qCAA5B,C,2CAMA,OACEC,MADF,CAEEC,gBAFF,CAGEC,cAHF,CAIEC,oBAJF,CAKEC,kBALF,CAMEC,UANF,CAOEC,cAPF,CAQEC,kBARF,KASO,UATP,C,6IAWA,GAAMC,CAAAA,UAAoB,CAAG,QAAvBA,CAAAA,UAAuB,EAAM,eACGf,QAAQ,CAAqB,IAArB,CADX,wCAC1BgB,UAD0B,eACdC,aADc,8BAELjB,QAAQ,CAAW,EAAX,CAFH,yCAE1BkB,MAF0B,eAElBC,SAFkB,kCAGDhB,aAAa,EAHZ,CAGjBiB,WAHiB,gBAGzBC,MAHyB,CAIjC,GAAMC,CAAAA,cAAc,CAAGlB,UAAU,EAAjC,CAEAL,SAAS,CAAC,UAAM,CACdwB,QAAQ,CAACC,KAAT,CAAiB,6BAAjB,CADc,QAGCC,CAAAA,YAHD,8IAGd,4NAC+DC,CAAAA,OAAO,CAACC,GAAR,CAAY,CACvErB,eAAe,CAACsB,GAAhB,iBAA6BR,WAAW,CAACJ,UAAzC,EADuE,CAEvEV,eAAe,CAACsB,GAAhB,iBAA6BR,WAAW,CAACJ,UAAzC,YAFuE,CAAZ,CAD/D,kGACiBa,aADjB,wBACWC,IADX,CAC0CC,SAD1C,wBACoCD,IADpC,CAMEb,aAAa,CAACY,aAAD,CAAb,CACAV,SAAS,CAACY,SAAD,CAAT,CAPF,sDAHc,+CAadN,YAAY,GACb,CAdQ,CAcN,CAACL,WAAW,CAACJ,UAAb,CAdM,CAAT,CAgBA,mBACE,wCACE,MAAC,MAAD,yBACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,uBACE,YAAK,GAAG,CAAEgB,OAAV,CAAmB,GAAG,CAAC,iBAAvB,EADF,EADF,cAIE,gBAAQ,OAAO,CAAE,yBAAMV,CAAAA,cAAc,CAACW,MAAf,EAAN,EAAjB,wBACE,KAAC,aAAD,IADF,YAJF,GADF,cAWE,MAAC,gBAAD,YACGjB,UAAU,eACT,MAAC,cAAD,yBACE,MAAC,oBAAD,yBACE,YAAK,GAAG,CAAEA,UAAU,CAACkB,KAAX,CAAiBC,UAA3B,CAAuC,GAAG,CAAC,EAA3C,EADF,cAEE,oCACE,wBAASnB,UAAU,CAACoB,SAApB,EADF,cAEE,mBAAIpB,UAAU,CAACqB,WAAf,EAFF,GAFF,GADF,cASE,MAAC,kBAAD,yBACE,mCACE,wBAASrB,UAAU,CAACsB,gBAApB,EADF,cAEE,+BAFF,GADF,cAKE,mCACE,wBAAStB,UAAU,CAACuB,WAApB,EADF,cAEE,+BAFF,GALF,cASE,mCACE,wBAASvB,UAAU,CAACwB,iBAApB,EADF,cAEE,wCAFF,GATF,GATF,GAFJ,cA4BE,KAAC,UAAD,WACGtB,MAAM,CAACuB,GAAP,CAAW,SAACC,KAAD,qBACV,MAAC,cAAD,EAAgB,IAAI,CAAEA,KAAK,CAACC,QAA5B,CAAqD,MAAM,CAAC,QAA5D,wBACE,MAAC,kBAAD,yBACE,wBAASD,KAAK,CAAClB,KAAf,EADF,cAEE,mBAAIkB,KAAK,CAACE,IAAN,CAAWC,KAAf,EAFF,GADF,cAKE,KAAC,cAAD,IALF,GAA2CH,KAAK,CAACI,EAAjD,CADU,EAAX,CADH,EA5BF,GAXF,GADF,CAsDD,CA5ED,CA8EA,cAAe/B,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { useRouteMatch, useHistory, Link } from 'react-router-dom';\nimport repositoriesApi from '../../services/api/repositories_api';\n\nimport { IRouteParams, IRepository, IIssue } from './interfaces';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport {\n  Header,\n  ContentContainer,\n  RepositoryInfo,\n  RepositoryInfoHeader,\n  RepositoryInfoList,\n  IssuesList,\n  IssuesListItem,\n  IssuesListItemInfo,\n} from './styles';\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<IRepository | null>(null);\n  const [issues, setIssues] = useState<IIssue[]>([]);\n  const { params: routeParams } = useRouteMatch<IRouteParams>();\n  const browserHistory = useHistory();\n\n  useEffect(() => {\n    document.title = 'Repo Info | Github Explorer';\n\n    async function loadPageData() {\n      const [{ data: apiRepository }, { data: apiIssues }] = await Promise.all([\n        repositoriesApi.get(`repos/${routeParams.repository}`),\n        repositoriesApi.get(`repos/${routeParams.repository}/issues`),\n      ]);\n\n      setRepository(apiRepository);\n      setIssues(apiIssues);\n    }\n\n    loadPageData();\n  }, [routeParams.repository]);\n\n  return (\n    <>\n      <Header>\n        <Link to=\"/\">\n          <img src={logoImg} alt=\"Github Explorer\" />\n        </Link>\n        <button onClick={() => browserHistory.goBack()}>\n          <FiChevronLeft />\n          Voltar\n        </button>\n      </Header>\n\n      <ContentContainer>\n        {repository && (\n          <RepositoryInfo>\n            <RepositoryInfoHeader>\n              <img src={repository.owner.avatar_url} alt=\"\" />\n              <div>\n                <strong>{repository.full_name}</strong>\n                <p>{repository.description}</p>\n              </div>\n            </RepositoryInfoHeader>\n\n            <RepositoryInfoList>\n              <li>\n                <strong>{repository.stargazers_count}</strong>\n                <span>Stars</span>\n              </li>\n              <li>\n                <strong>{repository.forks_count}</strong>\n                <span>Forks</span>\n              </li>\n              <li>\n                <strong>{repository.open_issues_count}</strong>\n                <span>Issues abertas</span>\n              </li>\n            </RepositoryInfoList>\n          </RepositoryInfo>\n        )}\n\n        <IssuesList>\n          {issues.map((issue) => (\n            <IssuesListItem href={issue.html_url} key={issue.id} target=\"_blank\">\n              <IssuesListItemInfo>\n                <strong>{issue.title}</strong>\n                <p>{issue.user.login}</p>\n              </IssuesListItemInfo>\n              <FiChevronRight />\n            </IssuesListItem>\n          ))}\n        </IssuesList>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}