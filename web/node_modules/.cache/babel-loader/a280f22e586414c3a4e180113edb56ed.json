{"ast":null,"code":"var _jsxFileName = \"/home/caetano/Desktop/tsreact/src/pages/Repository/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport repositoriesApi from '../../services/api/repositories_api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Header, ContentContainer, RepositoryInfo, RepositoryInfoHeader, RepositoryInfoList, IssuesList, IssuesListItem, IssuesListItemInfo } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Repository = () => {\n  _s();\n\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  const {\n    params: routeParams\n  } = useRouteMatch();\n  useEffect(() => {\n    async function loadPageData() {\n      const [{\n        data: apiRepository\n      }, {\n        data: apiIssues\n      }] = await Promise.all([repositoriesApi.get(`repos/${routeParams.repository}`), repositoriesApi.get(`repos/${routeParams.repository}/issues`)]);\n      setRepository(apiRepository);\n      setIssues(apiIssues);\n    }\n\n    loadPageData();\n  }, [routeParams.repository]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImg,\n        alt: \"Github Explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(FiChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \"Voltar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RepositoryInfo, {\n        children: [/*#__PURE__*/_jsxDEV(RepositoryInfoHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: repository === null || repository === void 0 ? void 0 : repository.owner.avatar_url,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: repository === null || repository === void 0 ? void 0 : repository.full_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: repository === null || repository === void 0 ? void 0 : repository.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RepositoryInfoList, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"1808\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"48\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Forks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"27\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Issues abertas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IssuesList, {\n        children: issues.map(issue => /*#__PURE__*/_jsxDEV(IssuesListItem, {\n          to: \"/repositories/\",\n          children: [/*#__PURE__*/_jsxDEV(IssuesListItemInfo, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"repository.full_name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"repository.description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Repository, \"Qk2zxFuvUDiQBurvT0ikkUJwquk=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Repository;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/home/caetano/Desktop/tsreact/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","FiChevronLeft","FiChevronRight","useRouteMatch","Link","repositoriesApi","Header","ContentContainer","RepositoryInfo","RepositoryInfoHeader","RepositoryInfoList","IssuesList","IssuesListItem","IssuesListItemInfo","Repository","repository","setRepository","issues","setIssues","params","routeParams","loadPageData","data","apiRepository","apiIssues","Promise","all","get","logoImg","owner","avatar_url","full_name","description","map","issue"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport repositoriesApi from '../../services/api/repositories_api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport {\n  Header,\n  ContentContainer,\n  RepositoryInfo,\n  RepositoryInfoHeader,\n  RepositoryInfoList,\n  IssuesList,\n  IssuesListItem,\n  IssuesListItemInfo,\n} from './styles';\n\ninterface IRouteParams { repository: string }\ninterface IRepository {\n  full_name: string,\n  description: string,\n  stargazers_count: number,\n  forks_count: number,\n  open_issues_count: number,\n  owner: {\n    login: string,\n    avatar_url: string,\n  }\n}\n\ninterface IIssue {\n  id: number,\n  title: string,\n  user: {\n    login: string,\n  }\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<IRepository | null>(null);\n  const [issues, setIssues] = useState<IIssue[]>([]);\n  const { params: routeParams } = useRouteMatch<IRouteParams>();\n\n  useEffect(() => {\n    async function loadPageData() {\n      const [{ data: apiRepository }, { data: apiIssues }] = await Promise.all([\n        repositoriesApi.get(`repos/${routeParams.repository}`),\n        repositoriesApi.get(`repos/${routeParams.repository}/issues`),\n      ]);\n\n      setRepository(apiRepository);\n      setIssues(apiIssues);\n    }\n\n    loadPageData();\n  }, [routeParams.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"Github Explorer\" />\n        <Link to=\"/dashboard\">\n          <FiChevronLeft />\n          Voltar\n        </Link>\n      </Header>\n\n      <ContentContainer>\n        <RepositoryInfo>\n          <RepositoryInfoHeader>\n            <img src={repository?.owner.avatar_url} alt=\"\" />\n            <div>\n              <strong>{repository?.full_name}</strong>\n              <p>{repository?.description}</p>\n            </div>\n          </RepositoryInfoHeader>\n\n          <RepositoryInfoList>\n            <li>\n              <strong>1808</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>48</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>27</strong>\n              <span>Issues abertas</span>\n            </li>\n          </RepositoryInfoList>\n        </RepositoryInfo>\n\n        <IssuesList>\n          {issues.map((issue) => (\n            <IssuesListItem to=\"/repositories/\">\n              <IssuesListItemInfo>\n                <strong>repository.full_name</strong>\n                <p>repository.description</p>\n              </IssuesListItemInfo>\n              <FiChevronRight />\n            </IssuesListItem>\n          ))}\n        </IssuesList>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}